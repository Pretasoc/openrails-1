<?xml version="1.0" encoding="utf-8"?>
<topic id="c067895a-196c-4bb4-a37e-2b6c37c67534" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
  	<history>
  		<version revisionNumber="1" author="Strings" date="16OCT2010"></version>
	</history>
    <introduction>
      <para>This documentation consists of 2 distinct types of documentation which are compiled together as part of the build process.</para>
      <list class="bullet">
      <listItem><para>C# Code Documentation</para>
      	<para>This reference documentation is generated directly from inline comments in the C# code.</para></listItem>
      <listItem><para>Conceptual Documentation</para>
      	<para>All of the other pages (HowTo, White Papers, References, etc etc) in the documentation is grouped as conceptual.</para></listItem>
      </list>
      <para>All of the documentation is built and combined using Microsoft's Sandcastle compiler.</para>
      <para>Sandcastle uses MAML (which is an XML defined file) and not HTML.
      It has a very restricted number of element types and formatting codes, so you are forced to focus on content rather than formatting.
      The documentation for MAML can be found in the file <localuri>trunk\Documentation\3rdPartyTools\SandcastleMAMLGuide.chm</localuri></para>
    </introduction>

    <procedure>
    	<title>Installing Sandcastle</title>
    	<steps class="bullet">
    		<step>
	    		<para>If you want to start contributing to this documentation, then you will require 3 programs which are located in the <localuri>trunk\Documentation\3rdPartyTools</localuri> directory to access the build process.</para>
    		</step>
    	</steps>
    	<steps class="ordered">
    		<step>
    			<para>Open and install the newest <localuri>Sandcastle_*.msi</localuri> which contains the Sandcastle compiler.</para>
    		</step>
    		<step>
    			<para>Open and install the newest <localuri>SandcastleBuilderSetup_*.msi</localuri> which contains the editor front end.</para>
    		</step>
    		<step>
    			<para>Open and install the newest <localuri>HTMLhelpWorkshop_v1.3.exe</localuri> which contains the HTML help v1 comiler.</para>
    			<alert class="important">You need to install this application in <localuri>%PROGRAMFILES%\HTML Help Workshop\</localuri> because it has to be a fixed path in the project file.</alert>
    		</step>
    	</steps>
    </procedure>

    <procedure>
     	<title>Creating Conceptual Documentation</title>
    	<steps class="bullet">
    		<step>
	    		<para>The conceptual content is edited using the Sandcastle Help File Builder.</para>
    		</step>
    	</steps>
      	<steps class="ordered">
    		<step>
	    		<para>Open the project file <localuri>trunk\Documentation\OpenRails.shfbproj</localuri></para>
    		</step>
    		<step>
    			<para>Make sure you have 'Content Layout' section open, so that you can see the documentation tree.</para>
	    		<para>You can access it by opening the MAML folder in the Project Explorer (which can be opened with Ctrl+Shift+P).</para>
    		</step>
    		<step>
	    		<para>While making changes to the conceptual documentation, you can accelerate the build process by not compiling the Code documentation.</para>
	    		<para>Press F4 to get the project properties, Click on the '...' button for the plugin configurations.</para>
	    		<para>Now either enable, or if it is missing add the 'Additional Content Only' plugin.</para>
	    		<para>Just make sure, that once you have finished, that you re-enable the code parsing as part of the build process.</para>
    		</step>
    		<step>
	    		<para>Right-clicking on items in the 'Content Layout' gives you the ability to add and move conceptual pages around the documentation.</para>
	    		<para>Please refrain from adding place-holder pages, if the documentation hasn't been written, then that is easier to identify if it cannot even be found in the index!</para>
    		</step>
    		<step>
	    		<para>Editing existing pages can be done, by double clicking in the layout panel, which opens the file in the very basic XML page editor.</para>
	    		<para>In the tool bar, there is a preview topic button, which lets you compile just the file you are currently editing.</para>
    		</step>
    		<step>
	    		<para>Once you have made your changes, and checked them in the compiled help, then check in your changes to CVS just like a code change - see related topics.</para>
    		</step>
    	</steps>
    </procedure>

    <procedure>
    	<title>Creating Code Documentation</title>
    	<steps class="bullet">
    		<step>
	    		<para>The code documentation is edited inside the C# development enviroment.</para>
    		</step>
    	</steps>
      	<steps class="ordered">
      		<step>
      			<para>All comments preceeded by the '///' keyword in a Open Rail C# projects, is parsed as MAML and integrated into the documentation.</para>
      		</step>
      	</steps>
    </procedure>

    <relatedTopics>
      <link xlink:href="f07e4606-d499-40a8-87cc-47b8b7b1ee77">Commiting a change to the CVS repository</link>
    </relatedTopics>
  </developerHowToDocument>
</topic>